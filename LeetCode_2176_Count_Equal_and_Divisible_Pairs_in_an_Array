class Solution {
    // Method to count pairs of indices (i, j) such that nums[i] == nums[j] and (i * j) % k == 0
    public int countPairs(int[] nums, int k) {
        int count = 0; // Initialize count of valid pairs
        int n = nums.length; // Get the length of the input array
        
        // Loop through each element in the array
        for (int i = 0; i < n - 1; i++) {
            // Loop through the elements that come after the current element
            for (int j = i + 1; j < n; j++) {
                // Check if the elements at indices i and j are equal
                if (nums[i] == nums[j]) {
                    // Check if the product of indices i and j is divisible by k
                    if ((i * j) % k == 0) {
                        count++; // Increment count if both conditions are met
                    }
                }
            }
        }
        return count; // Return the total count of valid pairs
    }
}

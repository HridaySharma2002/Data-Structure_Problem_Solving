class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        // Sort the intervals based on their end times
        Arrays.sort(intervals, (a, b) -> Integer.compare(a[1], b[1]));
        
        // Initialize a counter for the number of intervals to remove
        int count = 0;
        
        // Initialize the last end time to the smallest possible value
        int last_end_time = Integer.MIN_VALUE;
        
        // Iterate through the sorted intervals
        for (int i = 0; i < intervals.length; i++) {
            // If the start time of the current interval is greater than or equal to the last end time
            if (intervals[i][0] >= last_end_time) {
                // Update the last end time to the end time of the current interval
                last_end_time = intervals[i][1];
            } else {
                // If there is an overlap, increment the count of intervals to remove
                count++;
            }
        }
        
        // Return the total number of intervals that need to be removed
        return count;
    }
}
